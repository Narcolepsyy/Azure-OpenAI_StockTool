services:
  localstack:
    container_name: stocktool-localstack
    image: localstack/localstack-pro:latest  # Pro image required for GitHub Student Plan
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      # LocalStack Authentication
      - LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:-}
      
      # Core configuration
      - SERVICES=s3,dynamodb,sqs,sns,lambda,cloudwatch,logs,secretsmanager,sts,events
      - DEBUG=1
      - PERSISTENCE=1
      - DATA_DIR=/var/lib/localstack
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
      
      # AWS credentials (dummy for LocalStack)
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      
      # Performance optimization
      - EAGER_SERVICE_LOADING=1
      - SKIP_INFRA_DOWNLOADS=0
      - DISABLE_CORS_CHECKS=1
    volumes:
      - "localstack-data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack/init:/etc/localstack/init/ready.d"  # Init scripts
      - "./lambda_functions:/opt/code/lambda"  # Lambda function code
    networks:
      - stocktool-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stocktool-app
    ports:
      - "8000:8000"
    environment:
      # AWS LocalStack endpoints
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      
      # Application config
      - USE_LOCALSTACK=true
      - S3_BUCKET_NAME=stocktool-knowledge
      - DYNAMODB_TABLE_CONVERSATIONS=stocktool-conversations
      - SQS_QUEUE_ANALYSIS=stocktool-analysis-queue
      - SNS_TOPIC_NOTIFICATIONS=stocktool-notifications
      
      # Load from .env for sensitive data
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - .:/app
      - /app/.chroma  # Persist ChromaDB
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - stocktool-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

networks:
  stocktool-network:
    driver: bridge

volumes:
  localstack-data:
    driver: local
